{"ast":null,"code":"var _jsxFileName = \"/home/thinesh/project/spotify-clone-client/src/components/footer-components/ProgressBar.js\";\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst ProgressBar = ({\n  extraClass,\n  value,\n  engageClass,\n  setValue,\n  scrubFunction\n}) => {\n  const [engage, setEngage] = useState(false);\n  const [isDragging, setIsDragging] = useState(false);\n  const [scrub, setScrub] = useState(null);\n  const wrapperRef = useRef(null);\n  useEffect(() => {\n    window.addEventListener('mousemove', handleMove);\n    window.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      window.removeEventListener('mousemove', handleMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  });\n\n  const handleMouseUp = e => {\n    setIsDragging(false);\n\n    if (engage) {\n      setValue(scrub);\n    }\n\n    setScrub(null);\n\n    if (!e.target.classList.contains('progress-wrapper') && !e.target.classList.contains('progress-bar') && !e.target.classList.contains('progress') && !e.target.classList.contains('progress-slider')) {\n      setEngage(false);\n    }\n  };\n\n  const handleMove = e => {\n    if (engage && isDragging) {\n      const rect = wrapperRef.current.getBoundingClientRect();\n      let offsetRatio = (e.pageX - rect.x) / rect.width;\n\n      if (offsetRatio < 0) {\n        offsetRatio = 0.001;\n      } else if (offsetRatio > 1) {\n        offsetRatio = 1;\n      }\n\n      if (scrubFunction) {\n        scrubFunction(offsetRatio);\n      }\n\n      setScrub(offsetRatio);\n    }\n  };\n\n  const handleEnter = () => {\n    setEngage(true);\n  };\n\n  const handleLeave = () => {\n    if (!isDragging) {\n      setEngage(false);\n    }\n  };\n\n  const handleMouseDown = e => {\n    setIsDragging(true);\n    const rect = wrapperRef.current.getBoundingClientRect();\n    const offsetRatio = (e.pageX - rect.x) / rect.width;\n    setScrub(offsetRatio);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: wrapperRef,\n    className: \"progress-wrapper\",\n    onMouseEnter: handleEnter,\n    onMouseLeave: handleLeave,\n    onMouseDown: handleMouseDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `progress-bar`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `progress ${extraClass} ${engage ? engageClass : ''}`,\n    style: {\n      transform: `translate(-${((1 - (scrub || value)) * 100).toFixed(2)}%)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: `progress-slider ${extraClass} no-outline ${engage ? engageClass : ''}`,\n    style: {\n      left: `${((scrub || value) * 100).toFixed(2)}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["/home/thinesh/project/spotify-clone-client/src/components/footer-components/ProgressBar.js"],"names":["React","useState","useEffect","useRef","ProgressBar","extraClass","value","engageClass","setValue","scrubFunction","engage","setEngage","isDragging","setIsDragging","scrub","setScrub","wrapperRef","window","addEventListener","handleMove","handleMouseUp","removeEventListener","e","target","classList","contains","rect","current","getBoundingClientRect","offsetRatio","pageX","x","width","handleEnter","handleLeave","handleMouseDown","transform","toFixed","left"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\n\nconst ProgressBar = ({extraClass, value, engageClass, setValue, scrubFunction}) => {\n    const [engage, setEngage] = useState(false)\n    const [isDragging, setIsDragging] = useState(false)\n    const [scrub, setScrub] = useState(null)\n\n    const wrapperRef = useRef(null)\n\n\n    useEffect(() => {\n        window.addEventListener('mousemove', handleMove)\n        window.addEventListener('mouseup', handleMouseUp)\n        \n        return () => {\n            window.removeEventListener('mousemove', handleMove)\n            window.removeEventListener('mouseup', handleMouseUp)\n        }\n    })\n\n    const handleMouseUp = (e) => {\n        setIsDragging(false)\n        if (engage){\n            setValue(scrub)\n        }\n        setScrub(null)\n        if (!e.target.classList.contains('progress-wrapper') &&\n            !e.target.classList.contains('progress-bar') &&\n            !e.target.classList.contains('progress') &&\n            !e.target.classList.contains('progress-slider') ){\n            setEngage(false)\n        }\n    }\n\n    const handleMove = (e) => {\n        if (engage && isDragging) {\n            const rect = wrapperRef.current.getBoundingClientRect()\n            let offsetRatio = (e.pageX - rect.x)/rect.width\n\n            if (offsetRatio < 0){\n                offsetRatio = 0.001 \n            }else if (offsetRatio > 1){\n                offsetRatio = 1\n            }\n            \n            if(scrubFunction){\n                scrubFunction(offsetRatio)\n            }\n            setScrub(offsetRatio)\n        }\n    }\n\n    const handleEnter = () => {\n        setEngage(true)\n    }\n\n    const handleLeave = () => {\n        if (!isDragging){\n            setEngage(false)\n        }\n    }\n\n    const handleMouseDown = (e) => {\n        setIsDragging(true)\n        const rect = wrapperRef.current.getBoundingClientRect()\n        const offsetRatio = (e.pageX - rect.x)/rect.width\n        setScrub(offsetRatio)\n    }\n\n    return (\n        <div ref={wrapperRef} className=\"progress-wrapper\" onMouseEnter={handleEnter} onMouseLeave={handleLeave} onMouseDown={handleMouseDown}>\n            <div className={`progress-bar`} >\n                {/* {console.log(((1-(scrub || value))*100).toFixed(1))} */}\n                <div className={`progress ${extraClass} ${engage? engageClass:''}`} style={{transform: `translate(-${((1-(scrub || value))*100).toFixed(2)}%)`}} ></div>\n            </div>\n            <button className={`progress-slider ${extraClass} no-outline ${engage? engageClass:''}`} style={{left: `${((scrub || value)*100).toFixed(2)}%`}} ></button>\n        </div>\n    );\n}\n\nexport default ProgressBar;\n"]},"metadata":{},"sourceType":"module"}