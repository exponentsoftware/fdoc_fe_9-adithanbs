{"ast":null,"code":"var _jsxFileName = \"/home/thinesh/project/spotify-clone-client/src/components/pages-components/ArtistPage.js\";\nimport React from 'react';\nimport { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport makeAxiosRequest from '../../utilities/makeAxiosRequest';\nimport getLocale from '../../utilities/locale';\nimport useId from '../../utilities/hooks/useId';\nimport reqWithToken from '../../utilities/reqWithToken';\nimport putWithToken from '../../utilities/putWithToken';\nimport { TokenContext, LoginContext, MessageContext, PlayContext } from '../../utilities/context';\nimport PageBanner from '../featured-components/PageBanner';\nimport PlayListFunctions from '../featured-components/PlayListFunctions';\nimport AboutMenu from '../featured-components/AboutMenu';\nimport Loading from '../featured-components/Loading';\nexport default function ArtistPage() {\n  const id = useId('artist');\n  const token = useContext(TokenContext);\n  const loggedIn = useContext(LoginContext);\n  const setMessage = useContext(MessageContext);\n  const [loading, setLoading] = useState(true);\n  const setPlay = useContext(PlayContext);\n  const [bannerInfo, setbannerInfo] = useState({\n    name: '',\n    description: '',\n    user: [],\n    followers: 0,\n    primary_color: 'rgb(83, 83, 83)',\n    images: [],\n    total: 0\n  });\n  const [, locale] = getLocale();\n  const [tracks, setTracks] = useState([]);\n  const [album, setAlbum] = useState([]);\n  const [single, setSingle] = useState([]);\n  const [appear, setAppear] = useState([]);\n  const [compilation, setCompilation] = useState([]);\n  const [related, setRelated] = useState([]);\n  const [follow, setFollow] = useState(false);\n  const [uri, setUri] = useState('');\n  const source = axios.CancelToken.source();\n  useEffect(() => {\n    setTracks([]);\n    setAlbum([]);\n    setSingle([]);\n    setAppear([]);\n    setCompilation([]);\n    setRelated([]);\n    setFollow(false);\n    setUri('');\n    setLoading(true);\n    const [artistSource, requestArtist] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}`);\n    const [tracksSource, requestTracks] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}/top-tracks?country=${locale}`);\n    const [albumSource, requestAlbum] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}/albums?include_groups=album&country=${locale}`);\n    const [singleSource, requestSingle] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}/albums?include_groups=single&country=${locale}`);\n    const [appearSource, requestAppear] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}/albums?include_groups=appears_on&country=${locale}`);\n    const [compilationSource, requestCompilation] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}/albums?include_groups=compilation&country=${locale}`);\n    const [relatedSource, requestRelated] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}/related-artists`);\n\n    if (loggedIn && id) {\n      const requestFollow = reqWithToken(`https://api.spotify.com/v1/me/following/contains?type=artist&ids=${id}`, token, source);\n      requestFollow().then(response => {\n        setFollow(response.data[0]);\n      }).catch(error => console.log(error));\n    }\n\n    const makeRequest = async () => {\n      try {\n        const [artistData, tracksData, albumData, singleData, appearData, compilationData, relatedData] = await Promise.all([requestArtist(), requestTracks(), requestAlbum(), requestSingle(), requestAppear(), requestCompilation(), requestRelated()]);\n        const {\n          name,\n          followers,\n          primary_color,\n          images,\n          uri\n        } = artistData;\n        setbannerInfo(bannerInfo => ({ ...bannerInfo,\n          name,\n          followers,\n          primary_color,\n          images\n        }));\n        setUri(uri);\n        const tracks = tracksData.tracks.length > 5 ? tracksData.tracks.slice(0, 5) : tracksData.tracks;\n        const album = albumData.items;\n        const single = singleData.items;\n        const appear = appearData.items;\n        const compilation = compilationData.items;\n        const related = relatedData.artists;\n        setTracks(old => [...old, ...tracks]);\n        setAlbum(old => [...old, ...album]);\n        setSingle(old => [...old, ...single]);\n        setAppear(old => [...old, ...appear]);\n        setCompilation(old => [...old, ...compilation]);\n        setRelated(old => [...old, ...related]);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    };\n\n    if (id) {\n      makeRequest();\n    }\n\n    return () => {\n      artistSource.cancel();\n      tracksSource.cancel();\n      albumSource.cancel();\n      singleSource.cancel();\n      appearSource.cancel();\n      compilationSource.cancel();\n      relatedSource.cancel();\n      source.cancel();\n    }; // eslint-disable-next-line\n  }, [id]);\n\n  const followArtist = () => {\n    if (loggedIn) {\n      const request = putWithToken(`https://api.spotify.com/v1/me/following?type=artist&ids=${id}`, token, source, {}, follow ? 'DELETE' : 'PUT');\n      request().then(response => {\n        if (response.status === 204) {\n          if (follow) {\n            setMessage(`Unsaved from your collection`);\n          } else {\n            setMessage(`Saved to your collection`);\n          }\n\n          setFollow(!follow);\n        } else {\n          setMessage(`ERROR: Something went wrong! Server response: ${response.status}`);\n        }\n      }).catch(error => setMessage(`ERROR: ${error}`));\n    }\n  };\n\n  const playContext = () => {\n    const body = {\n      context_uri: uri\n    };\n    const request = putWithToken(`https://api.spotify.com/v1/me/player/play`, token, source, body);\n    request().then(response => {\n      if (response.status === 204) {\n        setTimeout(() => setPlay(), 500);\n      } else {\n        setMessage(`ERROR: Something went wrong! Server response: ${response.status}`);\n      }\n    }).catch(error => setMessage(`ERROR: ${error}`));\n  };\n\n  const playContextTrack = trackUri => {\n    const body = {\n      uris: [trackUri]\n    };\n    const request = putWithToken(`https://api.spotify.com/v1/me/player/play`, token, source, body);\n    request().then(response => {\n      if (response.status === 204) {\n        setTimeout(() => setPlay(), 500);\n      } else {\n        setMessage(`ERROR: Something went wrong! Server response: ${response.status}`);\n      }\n    }).catch(error => setMessage(`ERROR: ${error}`));\n  };\n\n  return loading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"listPage\",\n    style: {\n      display: tracks.length === 0 ? 'none' : 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageBanner, {\n    pageTitle: \"artist\",\n    bannerInfo: bannerInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playListContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playListOverlay\",\n    style: {\n      backgroundColor: `${bannerInfo.primary_color}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(PlayListFunctions, {\n    type: \"artist\",\n    follow: follow,\n    onFollow: followArtist,\n    setMessage: setMessage,\n    playContext: playContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(AboutMenu, {\n    id: id,\n    related: related,\n    tracks: tracks,\n    album: album,\n    single: single,\n    appear: appear,\n    compilation: compilation,\n    playContextTrack: playContextTrack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 25\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/thinesh/project/spotify-clone-client/src/components/pages-components/ArtistPage.js"],"names":["React","useState","useEffect","useContext","axios","makeAxiosRequest","getLocale","useId","reqWithToken","putWithToken","TokenContext","LoginContext","MessageContext","PlayContext","PageBanner","PlayListFunctions","AboutMenu","Loading","ArtistPage","id","token","loggedIn","setMessage","loading","setLoading","setPlay","bannerInfo","setbannerInfo","name","description","user","followers","primary_color","images","total","locale","tracks","setTracks","album","setAlbum","single","setSingle","appear","setAppear","compilation","setCompilation","related","setRelated","follow","setFollow","uri","setUri","source","CancelToken","artistSource","requestArtist","tracksSource","requestTracks","albumSource","requestAlbum","singleSource","requestSingle","appearSource","requestAppear","compilationSource","requestCompilation","relatedSource","requestRelated","requestFollow","then","response","data","catch","error","console","log","makeRequest","artistData","tracksData","albumData","singleData","appearData","compilationData","relatedData","Promise","all","length","slice","items","artists","old","cancel","followArtist","request","status","playContext","body","context_uri","setTimeout","playContextTrack","trackUri","uris","display","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {useState, useEffect, useContext} from 'react'\nimport axios from 'axios'\n\nimport makeAxiosRequest from '../../utilities/makeAxiosRequest'\nimport getLocale from '../../utilities/locale'\nimport useId from '../../utilities/hooks/useId'\nimport reqWithToken from '../../utilities/reqWithToken'\nimport putWithToken from '../../utilities/putWithToken'\nimport {TokenContext, LoginContext, MessageContext, PlayContext} from '../../utilities/context'\n\nimport PageBanner from '../featured-components/PageBanner'\nimport PlayListFunctions from '../featured-components/PlayListFunctions'\nimport AboutMenu from '../featured-components/AboutMenu'\nimport Loading from '../featured-components/Loading'\n\nexport default function ArtistPage() {\n    const id = useId('artist')\n    const token = useContext(TokenContext)\n    const loggedIn = useContext(LoginContext)\n    const setMessage = useContext(MessageContext)\n    const [loading, setLoading] = useState(true)\n    const setPlay = useContext(PlayContext)\n\n    const [bannerInfo, setbannerInfo] = useState({\n        name: '',\n        description: '',\n        user: [],\n        followers: 0,\n        primary_color: 'rgb(83, 83, 83)',\n        images: [],\n        total: 0\n    })\n\n    const [, locale] = getLocale()\n\n    const [tracks, setTracks] = useState([])\n    const [album, setAlbum] = useState([])\n    const [single, setSingle] = useState([])\n    const [appear, setAppear] = useState([])\n    const [compilation, setCompilation] = useState([])\n    const [related, setRelated] = useState([])\n    const [follow, setFollow] = useState(false)\n    const [uri, setUri] = useState('')\n\n    const source = axios.CancelToken.source()\n    useEffect(() => {\n        setTracks([])\n        setAlbum([])\n        setSingle([])\n        setAppear([])\n        setCompilation([])\n        setRelated([])\n        setFollow(false)\n        setUri('')\n        setLoading(true)\n        \n        const [artistSource, requestArtist] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}`)\n        const [tracksSource, requestTracks] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}/top-tracks?country=${locale}`)\n        const [albumSource, requestAlbum] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}/albums?include_groups=album&country=${locale}`)\n        const [singleSource, requestSingle] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}/albums?include_groups=single&country=${locale}`)\n        const [appearSource, requestAppear] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}/albums?include_groups=appears_on&country=${locale}`)\n        const [compilationSource, requestCompilation] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}/albums?include_groups=compilation&country=${locale}`)\n        const [relatedSource, requestRelated] = makeAxiosRequest(`https://api.spotify.com/v1/artists/${id}/related-artists`)\n\n        if (loggedIn && id){\n            const requestFollow = reqWithToken(`https://api.spotify.com/v1/me/following/contains?type=artist&ids=${id}`, token, source)\n            requestFollow()\n                .then(response => {\n                    setFollow(response.data[0])\n                })\n                .catch(error => console.log(error))\n        }\n        \n\n        const makeRequest = async ()=> {\n            try{\n                const [artistData, \n                        tracksData, \n                        albumData, \n                        singleData, \n                        appearData, \n                        compilationData,\n                        relatedData] = await Promise.all([requestArtist(), requestTracks(), requestAlbum(), requestSingle(), requestAppear(), requestCompilation(), requestRelated()])\n                \n                \n                const {name, followers, primary_color, images, uri} = artistData\n                setbannerInfo(bannerInfo => ({...bannerInfo, name, followers, primary_color, images}))\n                setUri(uri)\n\n                const tracks = tracksData.tracks.length > 5? tracksData.tracks.slice(0,5) : tracksData.tracks\n                const album = albumData.items\n                const single = singleData.items\n                const appear = appearData.items\n                const compilation = compilationData.items\n                const related = relatedData.artists\n                \n                setTracks((old) => [...old, ...tracks])\n                setAlbum((old) => [...old, ...album])\n                setSingle((old) => [...old, ...single])\n                setAppear((old) => [...old, ...appear])\n                setCompilation((old) => [...old, ...compilation])\n                setRelated(old => [...old, ...related])\n                setLoading(false)\n            }catch(error){ \n                console.log(error)\n                setLoading(false)\n            }   \n        }\n\n        if (id){\n            makeRequest()\n        }\n        return () => {\n            artistSource.cancel()\n            tracksSource.cancel()\n            albumSource.cancel()\n            singleSource.cancel()\n            appearSource.cancel()\n            compilationSource.cancel()\n            relatedSource.cancel()\n            source.cancel()\n        }\n    // eslint-disable-next-line\n    }, [id])\n\n    const followArtist = () => {\n        if (loggedIn) {\n            const request = putWithToken(`https://api.spotify.com/v1/me/following?type=artist&ids=${id}`, token, source, {}, follow? 'DELETE':'PUT')\n            request()\n                .then(response => {\n                    if (response.status === 204){\n                        if (follow){\n                            setMessage(`Unsaved from your collection`)\n                        }else{\n                            setMessage(`Saved to your collection`)\n                        }\n                        setFollow(!follow)\n                    }else{\n                        setMessage(`ERROR: Something went wrong! Server response: ${response.status}`)\n                    }\n                })\n                .catch(error => setMessage(`ERROR: ${error}`))\n        }\n    }\n\n    const playContext = () => {\n        const body = {\n            context_uri: uri\n        }\n        const request = putWithToken(`https://api.spotify.com/v1/me/player/play`, token, source, body)\n        request()\n            .then(response => {\n                if (response.status === 204){\n                    setTimeout(() => setPlay(), 500)\n                }else{\n                    setMessage(`ERROR: Something went wrong! Server response: ${response.status}`)\n                }\n            })\n            .catch(error => setMessage(`ERROR: ${error}`))\n    }\n\n    const playContextTrack = (trackUri) => {\n        const body = {\n            uris: [trackUri]\n        }\n        const request = putWithToken(`https://api.spotify.com/v1/me/player/play`, token, source, body)\n        request()\n            .then(response => {\n                if (response.status === 204){\n                    setTimeout(() => setPlay(), 500)\n                }else{\n                    setMessage(`ERROR: Something went wrong! Server response: ${response.status}`)\n                }\n            })\n            .catch(error => setMessage(`ERROR: ${error}`))\n    }\n\n    return (\n        loading ? \n            <Loading /> \n            : \n            <div className='listPage' style={{display: tracks.length===0? 'none':'block'}}>\n                <PageBanner pageTitle='artist' bannerInfo={bannerInfo}/>\n                <div className=\"playListContent\">\n                    <div className=\"playListOverlay\" style={{backgroundColor: `${bannerInfo.primary_color}`}}></div>\n                    <PlayListFunctions type='artist' follow={follow} onFollow={followArtist} setMessage={setMessage} playContext={playContext}/>\n                    <div className=\"page-content\">\n                        <AboutMenu id={id} related = {related} tracks={tracks} album={album} single={single} appear={appear} compilation={compilation} playContextTrack={playContextTrack}/>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}