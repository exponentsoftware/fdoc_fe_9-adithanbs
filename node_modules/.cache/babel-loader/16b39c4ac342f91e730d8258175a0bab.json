{"ast":null,"code":"var _jsxFileName = \"/home/thinesh/project/spotify-clone-client/src/components/featured-components/SearchRow.js\";\nimport React, { useEffect, useState } from 'react';\nimport makeAxiosRequest from '../../utilities/makeAxiosRequest';\nimport SearchRowTitle from './SearchRowTitle';\nimport SearchRowGrid from './SearchRowGrid';\nexport default function SearchRow({\n  title,\n  type,\n  query\n}) {\n  const [result, setResult] = useState([]);\n  const [formatedQuery, setformatedQuery] = useState('');\n  useEffect(() => {\n    const formatedQuery = query.toLowerCase().split().join('+');\n    setformatedQuery(formatedQuery);\n  }, [query]);\n  useEffect(() => {\n    const [source, makeRequest] = makeAxiosRequest(`https://api.spotify.com/v1/search?q=${formatedQuery}&type=${type}&limit=9`);\n\n    if (formatedQuery.length > 0) {\n      makeRequest().then(data => {\n        const key = Object.keys(data)[0];\n        const result = data[key].items;\n        setResult(result);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n\n    return () => source.cancel();\n  }, [formatedQuery, type]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"CollectionRow\",\n    style: {\n      display: result.length === 0 ? 'none' : 'grid'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchRowTitle, {\n    title: title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SearchRowGrid, {\n    type: type,\n    info: result,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/home/thinesh/project/spotify-clone-client/src/components/featured-components/SearchRow.js"],"names":["React","useEffect","useState","makeAxiosRequest","SearchRowTitle","SearchRowGrid","SearchRow","title","type","query","result","setResult","formatedQuery","setformatedQuery","toLowerCase","split","join","source","makeRequest","length","then","data","key","Object","keys","items","catch","error","console","log","cancel","display"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,eAAe,SAASC,SAAT,CAAmB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAnB,EAAyC;AACpD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,aAAa,GAAGH,KAAK,CAACK,WAAN,GAAoBC,KAApB,GAA4BC,IAA5B,CAAiC,GAAjC,CAAtB;AACAH,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACH,GAHQ,EAGN,CAACH,KAAD,CAHM,CAAT;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM,CAACgB,MAAD,EAASC,WAAT,IAAwBf,gBAAgB,CAAE,uCAAsCS,aAAc,SAAQJ,IAAK,UAAnE,CAA9C;;AACA,QAAII,aAAa,CAACO,MAAd,GAAuB,CAA3B,EAA6B;AACzBD,MAAAA,WAAW,GACNE,IADL,CACWC,IAAD,IAAU;AACZ,cAAMC,GAAG,GAAGC,MAAM,CAACC,IAAP,CAAYH,IAAZ,EAAkB,CAAlB,CAAZ;AACA,cAAMX,MAAM,GAAGW,IAAI,CAACC,GAAD,CAAJ,CAAUG,KAAzB;AACAd,QAAAA,SAAS,CAACD,MAAD,CAAT;AACH,OALL,EAMKgB,KANL,CAMYC,KAAD,IAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OARL;AASH;;AACD,WAAO,MAAMV,MAAM,CAACa,MAAP,EAAb;AACH,GAdQ,EAcN,CAAClB,aAAD,EAAgBJ,IAAhB,CAdM,CAAT;AAiBA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,KAAK,EAAE;AAACuB,MAAAA,OAAO,EAAErB,MAAM,CAACS,MAAP,KAAgB,CAAhB,GAAmB,MAAnB,GAA0B;AAApC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEZ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAEC,IAArB;AAA2B,IAAA,IAAI,EAAEE,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH","sourcesContent":["import React, {useEffect, useState} from 'react'\n\nimport makeAxiosRequest from '../../utilities/makeAxiosRequest'\n\nimport SearchRowTitle from './SearchRowTitle'\nimport SearchRowGrid from './SearchRowGrid'\n\nexport default function SearchRow({title, type, query}) {\n    const [result, setResult] = useState([])\n    const [formatedQuery, setformatedQuery] = useState('')\n\n    useEffect(() => {\n        const formatedQuery = query.toLowerCase().split().join('+')\n        setformatedQuery(formatedQuery)\n    }, [query])\n\n\n    useEffect(() => {\n        const [source, makeRequest] = makeAxiosRequest(`https://api.spotify.com/v1/search?q=${formatedQuery}&type=${type}&limit=9`)\n        if (formatedQuery.length > 0){\n            makeRequest()\n                .then((data) => {\n                    const key = Object.keys(data)[0]\n                    const result = data[key].items\n                    setResult(result)\n                })\n                .catch((error) => {\n                    console.log(error)\n                })\n        }\n        return () => source.cancel()\n    }, [formatedQuery, type])\n\n\n    return (\n        <div className='CollectionRow' style={{display: result.length===0? 'none':'grid'}}>\n            <SearchRowTitle title={title}/>\n            <SearchRowGrid type={type} info={result}/>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}