{"ast":null,"code":"// eslint-disable-next-line\nimport React, { useState, useRef, useCallback } from 'react';\nimport reqWithToken from '../reqWithToken';\n\nfunction useTokenScroll(setList, token, source) {\n  const [next, setNext] = useState(null);\n  const observer = useRef();\n  const lastRef = useCallback(node => {\n    if (observer.current) observer.current.disconnect();\n    observer.current = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting && next) {\n        console.log('hi');\n        const makeRequest = reqWithToken(next, token, source);\n        makeRequest().then(response => {\n          const data = response.data;\n          const resultList = data.items.map(track => track.track);\n          const next = data.next || data.playlists.next;\n          setList(tracks => [...tracks, ...resultList]);\n          setNext(next);\n        }).catch(error => console.log(error));\n      }\n    });\n    if (node) observer.current.observe(node); // eslint-disable-next-line\n  }, [next]);\n  return [setNext, lastRef];\n}\n\nexport default useTokenScroll;","map":{"version":3,"sources":["/home/thinesh/project/spotify-clone-client/src/utilities/hooks/useTokenScroll.js"],"names":["React","useState","useRef","useCallback","reqWithToken","useTokenScroll","setList","token","source","next","setNext","observer","lastRef","node","current","disconnect","IntersectionObserver","entries","isIntersecting","console","log","makeRequest","then","response","data","resultList","items","map","track","playlists","tracks","catch","error","observe"],"mappings":"AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,WAAlC,QAAqD,OAArD;AACA,OAAOC,YAAP,MAAyB,iBAAzB;;AAEA,SAASC,cAAT,CAAwBC,OAAxB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAA+C;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAMU,QAAQ,GAAGT,MAAM,EAAvB;AACA,QAAMU,OAAO,GAAGT,WAAW,CAACU,IAAI,IAAI;AAChC,QAAIF,QAAQ,CAACG,OAAb,EAAsBH,QAAQ,CAACG,OAAT,CAAiBC,UAAjB;AACtBJ,IAAAA,QAAQ,CAACG,OAAT,GAAmB,IAAIE,oBAAJ,CAAyBC,OAAO,IAAI;AACnD,UAAGA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAX,IAA6BT,IAAhC,EAAqC;AACjCU,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,cAAMC,WAAW,GAAGjB,YAAY,CAACK,IAAD,EAAOF,KAAP,EAAcC,MAAd,CAAhC;AACAa,QAAAA,WAAW,GACNC,IADL,CACUC,QAAQ,IAAI;AACd,gBAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,gBAAMC,UAAU,GAAGD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAeC,KAAK,IAAIA,KAAK,CAACA,KAA9B,CAAnB;AACA,gBAAMnB,IAAI,GAAGe,IAAI,CAACf,IAAL,IAAae,IAAI,CAACK,SAAL,CAAepB,IAAzC;AACAH,UAAAA,OAAO,CAACwB,MAAM,IAAI,CAAC,GAAGA,MAAJ,EAAY,GAAGL,UAAf,CAAX,CAAP;AACAf,UAAAA,OAAO,CAACD,IAAD,CAAP;AACH,SAPL,EAQKsB,KARL,CAQWC,KAAK,IAAIb,OAAO,CAACC,GAAR,CAAYY,KAAZ,CARpB;AASH;AACJ,KAdkB,CAAnB;AAeA,QAAInB,IAAJ,EAAUF,QAAQ,CAACG,OAAT,CAAiBmB,OAAjB,CAAyBpB,IAAzB,EAjBsB,CAkBpC;AACC,GAnB0B,EAmBxB,CAACJ,IAAD,CAnBwB,CAA3B;AAqBA,SAAO,CAACC,OAAD,EAAUE,OAAV,CAAP;AACH;;AAED,eAAeP,cAAf","sourcesContent":["// eslint-disable-next-line\nimport React, { useState, useRef, useCallback } from 'react';\nimport reqWithToken from '../reqWithToken'\n\nfunction useTokenScroll(setList, token, source){\n    const [next, setNext] = useState(null) \n\n    const observer = useRef()\n    const lastRef = useCallback(node => {\n        if (observer.current) observer.current.disconnect()\n        observer.current = new IntersectionObserver(entries => {\n            if(entries[0].isIntersecting && next){\n                console.log('hi')\n                const makeRequest = reqWithToken(next, token, source)\n                makeRequest()\n                    .then(response => {\n                        const data = response.data\n                        const resultList = data.items.map(track => track.track)\n                        const next = data.next || data.playlists.next\n                        setList(tracks => [...tracks, ...resultList])\n                        setNext(next)\n                    })\n                    .catch(error => console.log(error))\n            }\n        })\n        if (node) observer.current.observe(node)\n    // eslint-disable-next-line\n    }, [next])\n\n    return [setNext, lastRef]\n}\n\nexport default useTokenScroll"]},"metadata":{},"sourceType":"module"}