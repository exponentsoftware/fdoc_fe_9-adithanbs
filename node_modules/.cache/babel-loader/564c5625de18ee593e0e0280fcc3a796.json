{"ast":null,"code":"var _jsxFileName = \"/home/thinesh/project/spotify-clone-client/src/components/pages-components/CollectionPage.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Route } from 'react-router-dom';\nimport axios from 'axios';\nimport CollectionRow from '../featured-components/CollectionRow';\nimport { TokenContext } from '../../utilities/context';\nimport reqWithToken from '../../utilities/reqWithToken';\n\nconst CollectionPage = ({\n  playlists\n}) => {\n  const [artists, setArtists] = useState([]);\n  const [albums, setAlbums] = useState([]);\n  const token = useContext(TokenContext);\n  useEffect(() => {\n    if (token) {\n      const cancelSource = axios.CancelToken.source();\n\n      const makeRequests = async () => {\n        const requestArtist = reqWithToken('https://api.spotify.com/v1/me/following?type=artist', token, cancelSource);\n        const requestAlbum = reqWithToken('https://api.spotify.com/v1/me/albums', token, cancelSource);\n        const [_artists, _albums] = await Promise.all([requestArtist(), requestAlbum()]);\n        setArtists(_artists.data.artists.items);\n        setAlbums(_albums.data.items);\n      };\n\n      makeRequests();\n      return () => cancelSource.cancel();\n    } // eslint-disable-next-line\n\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-content\",\n    style: {\n      paddingTop: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/collection/playlist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CollectionRow, {\n    name: \"Playlists\",\n    playlists: playlists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/collection/artist\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CollectionRow, {\n    name: \"Artists\",\n    playlists: artists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/collection/album\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CollectionRow, {\n    name: \"Albums\",\n    playlists: albums,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default CollectionPage;","map":{"version":3,"sources":["/home/thinesh/project/spotify-clone-client/src/components/pages-components/CollectionPage.js"],"names":["React","useState","useEffect","useContext","Route","axios","CollectionRow","TokenContext","reqWithToken","CollectionPage","playlists","artists","setArtists","albums","setAlbums","token","cancelSource","CancelToken","source","makeRequests","requestArtist","requestAlbum","_artists","_albums","Promise","all","data","items","cancel","paddingTop"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA0B,sCAA1B;AAEA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAiB;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AAEA,QAAMc,KAAK,GAAGZ,UAAU,CAACI,YAAD,CAAxB;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIa,KAAJ,EAAW;AACP,YAAMC,YAAY,GAAGX,KAAK,CAACY,WAAN,CAAkBC,MAAlB,EAArB;;AAEA,YAAMC,YAAY,GAAG,YAAY;AAC7B,cAAMC,aAAa,GAAGZ,YAAY,CAAC,qDAAD,EAAwDO,KAAxD,EAA+DC,YAA/D,CAAlC;AACA,cAAMK,YAAY,GAAGb,YAAY,CAAC,sCAAD,EAAyCO,KAAzC,EAAgDC,YAAhD,CAAjC;AAEA,cAAM,CAACM,QAAD,EAAWC,OAAX,IAAsB,MAAMC,OAAO,CAACC,GAAR,CAAY,CAACL,aAAa,EAAd,EAAkBC,YAAY,EAA9B,CAAZ,CAAlC;AACAT,QAAAA,UAAU,CAACU,QAAQ,CAACI,IAAT,CAAcf,OAAd,CAAsBgB,KAAvB,CAAV;AACAb,QAAAA,SAAS,CAACS,OAAO,CAACG,IAAR,CAAaC,KAAd,CAAT;AACH,OAPD;;AASAR,MAAAA,YAAY;AAEZ,aAAO,MAAMH,YAAY,CAACY,MAAb,EAAb;AACH,KAhBW,CAiBhB;;AACC,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC;AAAZ,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,sBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,WAApB;AAAgC,IAAA,SAAS,EAAEnB,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAII,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,SAApB;AAA8B,IAAA,SAAS,EAAEC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,eAOI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,QAApB;AAA6B,IAAA,SAAS,EAAEE,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAPJ,CADJ;AAaH,CAvCD;;AA0CA,eAAeJ,cAAf","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport {Route} from 'react-router-dom'\nimport axios from 'axios'\n\nimport CollectionRow from '../featured-components/CollectionRow'\n\nimport {TokenContext} from '../../utilities/context'\nimport reqWithToken from '../../utilities/reqWithToken'\n\nconst CollectionPage = ({playlists}) => {\n    const [artists, setArtists] = useState([])\n    const [albums, setAlbums] = useState([])\n\n    const token = useContext(TokenContext)\n\n    useEffect(() => {\n        if (token) {\n            const cancelSource = axios.CancelToken.source()\n\n            const makeRequests = async () => {\n                const requestArtist = reqWithToken('https://api.spotify.com/v1/me/following?type=artist', token, cancelSource)\n                const requestAlbum = reqWithToken('https://api.spotify.com/v1/me/albums', token, cancelSource)\n\n                const [_artists, _albums] = await Promise.all([requestArtist(), requestAlbum()])\n                setArtists(_artists.data.artists.items)\n                setAlbums(_albums.data.items)\n            }\n\n            makeRequests()\n\n            return () => cancelSource.cancel()\n        }\n    // eslint-disable-next-line\n    }, [])\n\n    return (\n        <div className='page-content' style={{paddingTop:'16px'}}>\n            <Route exact path='/collection/playlist'>\n                <CollectionRow name='Playlists' playlists={playlists}/>\n            </Route>\n            <Route exact path='/collection/artist'>\n                <CollectionRow name='Artists' playlists={artists}/>\n            </Route>\n            <Route exact path='/collection/album'>\n                <CollectionRow name='Albums' playlists={albums}/>\n            </Route>\n        </div>\n    );\n}\n\n\nexport default CollectionPage;\n"]},"metadata":{},"sourceType":"module"}