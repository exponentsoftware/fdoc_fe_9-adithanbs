{"ast":null,"code":"var _jsxFileName = \"/home/thinesh/project/spotify-clone-client/src/components/featured-components/PlayCard.js\";\nimport React, { useContext } from 'react';\nimport { useHistory, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport CardInfo from './CardInfo';\nimport CardDisplay from './CardDisplay';\nimport Icon from '../icons';\nimport putWithToken from '../../utilities/putWithToken';\nimport { TokenContext, LoginContext, PlayContext, MessageContext } from '../../utilities/context';\nconst PlayCard = React.forwardRef(({\n  info,\n  type\n}, ref) => {\n  const history = useHistory();\n  const description = returnDescription(type, info);\n  const {\n    name,\n    id,\n    uri\n  } = info;\n  const setMessage = useContext(MessageContext);\n  const token = useContext(TokenContext);\n  const loggedIn = useContext(LoginContext);\n  const updatePlayer = useContext(PlayContext);\n  const source = axios.CancelToken.source();\n  let images;\n\n  if (type === 'track') {\n    images = info.album.images;\n  } else {\n    images = info.images;\n  }\n\n  let image_url;\n\n  try {\n    image_url = images[0].url;\n  } catch {\n    image_url = null;\n  }\n\n  const playContext = () => {\n    if (uri) {\n      var body;\n\n      if (type === 'track') {\n        body = {\n          uris: [uri]\n        };\n      } else {\n        body = {\n          context_uri: uri\n        };\n      }\n\n      const request = putWithToken(`https://api.spotify.com/v1/me/player/play`, token, source, body);\n      request().then(response => {\n        if (response.status === 204) {\n          setTimeout(() => updatePlayer(), 1000);\n        } else {\n          setMessage(`ERROR: ${response}`);\n        }\n      }).catch(error => setMessage(`ERROR: ${error}`));\n    } else {\n      history.push(`/tracks`);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pcWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: info.to ? info.to : type === 'track' ? `/album/${info.album.id}?highlight=${id}` : `/${type}/${id}`,\n    style: {\n      textDecoration: 'none',\n      color: 'var(--main-text)',\n      zIndex: '3'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: \"PlayCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardDisplay, {\n    url: image_url,\n    type: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CardInfo, {\n    title: name,\n    description: description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }))), loggedIn ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"smallButton no-outline\",\n    title: \"Play\",\n    onClick: () => {\n      playContext();\n      updatePlayer();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"Play\",\n    height: \"17\",\n    width: \"17\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"smallButton no-outline\",\n    title: \"Play\",\n    \"data-tip\": \"play\",\n    \"data-for\": \"tooltipMain\",\n    \"data-event\": \"click\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"Play\",\n    height: \"17\",\n    width: \"17\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  })));\n});\n\nfunction returnDescription(type, info) {\n  let artists;\n\n  switch (type) {\n    case 'playlist':\n      return info.description || `By ${info.owner.display_name}`;\n\n    case 'album':\n      artists = info.artists.map(object => object.name);\n      return artists.length === 1 ? artists[0] : artists.join(', ');\n\n    case 'artist':\n      return 'artist';\n\n    case 'track':\n      artists = info.artists.map(object => object.name);\n      return artists.length === 1 ? artists[0] : artists.join(', ');\n\n    default:\n      return null;\n  }\n}\n\nexport default PlayCard;","map":{"version":3,"sources":["/home/thinesh/project/spotify-clone-client/src/components/featured-components/PlayCard.js"],"names":["React","useContext","useHistory","Link","axios","CardInfo","CardDisplay","Icon","putWithToken","TokenContext","LoginContext","PlayContext","MessageContext","PlayCard","forwardRef","info","type","ref","history","description","returnDescription","name","id","uri","setMessage","token","loggedIn","updatePlayer","source","CancelToken","images","album","image_url","url","playContext","body","uris","context_uri","request","then","response","status","setTimeout","catch","error","push","to","textDecoration","color","zIndex","artists","owner","display_name","map","object","length","join"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react'\nimport {useHistory, Link} from 'react-router-dom'\nimport axios from 'axios'\n\nimport CardInfo from './CardInfo'\nimport CardDisplay from './CardDisplay'\nimport Icon from '../icons'\n\nimport putWithToken from '../../utilities/putWithToken'\nimport {TokenContext, LoginContext, PlayContext, MessageContext} from '../../utilities/context'\n\nconst PlayCard = React.forwardRef(({info, type}, ref) => {\n    const history = useHistory()\n    const description = returnDescription(type, info)\n    const {name, id, uri} = info\n    const setMessage = useContext(MessageContext)\n\n    const token = useContext(TokenContext)\n    const loggedIn = useContext(LoginContext)\n    const updatePlayer = useContext(PlayContext)\n    const source = axios.CancelToken.source()\n\n    let images\n    if (type === 'track'){\n        images = info.album.images\n    }else{\n        images = info.images\n    }\n    let image_url\n    try{\n        image_url = images[0].url\n    }catch{\n        image_url = null \n    }\n    \n    const playContext = () => {\n        if (uri){\n            var body\n            if (type === 'track'){\n                body = {\n                    uris: [uri]\n                }\n            }else{\n                body = {\n                    context_uri: uri\n                }\n            }\n            const request = putWithToken(`https://api.spotify.com/v1/me/player/play`, token, source, body)\n            request()\n                .then(response => {\n                    if (response.status === 204){\n                        setTimeout(() => updatePlayer(), 1000)\n                    }else{\n                        setMessage(`ERROR: ${response}`)\n                    }\n                })\n                .catch(error => setMessage(`ERROR: ${error}`))\n        }else{\n            history.push(`/tracks`)\n        }\n    }\n\n    return (\n        <div className='pcWrapper'>\n            <Link to={info.to? info.to : type === 'track'? `/album/${info.album.id}?highlight=${id}`:`/${type}/${id}`} style={{textDecoration:'none', color:'var(--main-text)', zIndex:'3'}}>\n                <div ref={ref} className=\"PlayCard\">\n                    <CardDisplay url={image_url} type={type}/>\n                    <CardInfo title={name} description={description}/>\n                </div>\n            </Link>\n            {loggedIn? \n            <button className=\"smallButton no-outline\" title=\"Play\" onClick={() => {\n                playContext()\n                updatePlayer()\n            }}>\n                <Icon name=\"Play\" height='17' width='17'/>\n            </button>\n            :\n            <button className=\"smallButton no-outline\" title=\"Play\" data-tip='play' data-for='tooltipMain' data-event='click'>\n                <Icon name=\"Play\" height='17' width='17'/>\n            </button>\n            }\n            \n        </div>\n    )\n})\n\n\nfunction returnDescription(type, info){\n    let artists\n    switch (type){\n        case 'playlist':\n           return info.description || `By ${info.owner.display_name}`\n        case 'album':\n            artists = info.artists.map((object) => object.name)\n            return artists.length === 1 ? artists[0]:artists.join(', ')\n        case 'artist':\n            return 'artist'\n        case 'track':\n            artists = info.artists.map((object) => object.name)\n            return artists.length === 1 ? artists[0]:artists.join(', ')\n        default:\n            return null\n    }\n}\n\n\nexport default PlayCard"]},"metadata":{},"sourceType":"module"}