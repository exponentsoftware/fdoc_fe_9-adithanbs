{"ast":null,"code":"var _jsxFileName = \"/home/thinesh/project/spotify-clone-client/src/components/featured-components/PageBanner.js\";\nimport React from 'react';\nimport Icon from '../icons';\nexport default function PageBanner({\n  pageTitle,\n  bannerInfo\n}) {\n  const {\n    name,\n    description,\n    user,\n    followers,\n    primary_color,\n    images,\n    release_date,\n    total\n  } = bannerInfo;\n  let formattedLikes;\n  let imgUrl;\n\n  if (images && images.length > 0) {\n    imgUrl = images[0].url;\n  }\n\n  if (followers) {\n    formattedLikes = followers.total.toLocaleString('en-US');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"banner\",\n    style: {\n      backgroundColor: `${primary_color}`,\n      height: pageTitle === 'artist' ? '40vh' : '30vh'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `bannerImgDiv ${pageTitle === 'profile' || pageTitle === 'artist' ? 'circleDiv' : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, imgUrl ? /*#__PURE__*/React.createElement(\"img\", {\n    loading: \"lazy\",\n    src: imgUrl,\n    className: `bannerImg ${pageTitle === 'profile' || pageTitle === 'artist' ? 'circleDiv' : null}`,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"svgSizing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"Music2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bannerInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"pageTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, pageTitle), /*#__PURE__*/React.createElement(\"span\", {\n    style: spanStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: name.length > 15 ? \"bannerTitleXL\" : \"bannerTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, name)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"bannerDescription\",\n    style: {\n      display: description === '' ? 'none' : 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, description), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"additionalInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, user && user[0] && user.map((person, index) => /*#__PURE__*/React.createElement(\"a\", {\n    key: index,\n    href: `/${person.type}/${person.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 25\n    }\n  }, person.type === 'artist' ? person.name : person.display_name)), total !== 0 && total && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, total, \" Playlists\"), followers !== 0 && /*#__PURE__*/React.createElement(\"h2\", {\n    style: pageTitle === 'artist' ? followerStyle : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, formattedLikes, \" \", followerTitle(pageTitle)), release_date && /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }, release_date))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bannerOverlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction followerTitle(title) {\n  switch (title) {\n    case 'profile':\n      return 'Followers';\n\n    case 'artist':\n      return 'monthly listeners';\n\n    default:\n      return 'Likes';\n  }\n}\n\nconst followerStyle = {\n  fontSize: '16px',\n  lineHeight: '2',\n  marginTop: '4px',\n  color: '#fff'\n};\nconst spanStyle = {\n  display: '-webkit-box',\n  WebkitLineClamp: '3',\n  WebkitBoxOrient: 'vertical',\n  marginTop: '4px',\n  wordBreak: 'break-word',\n  overflow: 'hidden'\n};","map":{"version":3,"sources":["/home/thinesh/project/spotify-clone-client/src/components/featured-components/PageBanner.js"],"names":["React","Icon","PageBanner","pageTitle","bannerInfo","name","description","user","followers","primary_color","images","release_date","total","formattedLikes","imgUrl","length","url","toLocaleString","backgroundColor","height","spanStyle","display","map","person","index","type","id","display_name","followerStyle","followerTitle","title","fontSize","lineHeight","marginTop","color","WebkitLineClamp","WebkitBoxOrient","wordBreak","overflow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Icon from '../icons'\n\nexport default function PageBanner({pageTitle, bannerInfo}) {\n    const {name, description, user, followers, primary_color, images, release_date, total} = bannerInfo\n    let formattedLikes\n    let imgUrl \n    if (images && images.length > 0){\n        imgUrl = images[0].url\n    }\n\n    if (followers){\n        formattedLikes = followers.total.toLocaleString('en-US')\n    }\n    return (\n        <div className=\"banner\" style={{backgroundColor:`${primary_color}`, height: pageTitle === 'artist'?'40vh':'30vh'}}>\n            <div className={`bannerImgDiv ${pageTitle==='profile'||pageTitle==='artist'? 'circleDiv':null}`}>\n                {imgUrl ? \n                    <img loading=\"lazy\" src={imgUrl} className={`bannerImg ${pageTitle==='profile'||pageTitle==='artist'? 'circleDiv':null}`} alt=\"\" />:\n                    <div className=\"svgSizing\">\n                        <Icon name='Music2'/>\n                    </div>\n                }\n            </div>\n\n            <div className=\"bannerInfo\">\n                <h2 className=\"pageTitle\">{pageTitle}</h2>\n                <span style={spanStyle}>\n                    <h1 className={name.length > 15? \"bannerTitleXL\":\"bannerTitle\"}>{name}</h1>\n                </span>\n                <p className=\"bannerDescription\" style={{display: description===''? 'none':'flex'}}>{description}</p>\n                <div className=\"additionalInfo\">\n                    {user && user[0] && user.map((person, index) => (\n                        <a key={index} href={`/${person.type}/${person.id}`}>{person.type === 'artist'? person.name:person.display_name}</a>\n                    ))}\n                    {total !== 0 && total&& \n                        <h2>{total} Playlists</h2>\n                    }\n                    {followers !== 0 &&\n                        <h2 style={pageTitle === 'artist'? followerStyle:null}>{formattedLikes} {followerTitle(pageTitle)}</h2>\n                    }\n                    {release_date && \n                        <h2>{release_date}</h2>\n                    }\n                </div>\n            </div>\n            <div className=\"bannerOverlay\"></div>\n        </div>\n    )\n}\n\n\nfunction followerTitle(title){\n    switch (title) {\n        case 'profile':\n            return 'Followers'\n        case 'artist':\n            return 'monthly listeners'\n        default:\n            return 'Likes'\n    }\n}\n\nconst followerStyle ={\n    fontSize: '16px',\n    lineHeight: '2',\n    marginTop: '4px',\n    color: '#fff'\n}\n\nconst spanStyle = {\n    display: '-webkit-box',\n    WebkitLineClamp: '3',\n    WebkitBoxOrient: 'vertical',\n    marginTop: '4px',\n    wordBreak: 'break-word',\n    overflow: 'hidden',\n}"]},"metadata":{},"sourceType":"module"}