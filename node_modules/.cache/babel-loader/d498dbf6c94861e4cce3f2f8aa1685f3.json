{"ast":null,"code":"var _jsxFileName = \"/home/thinesh/project/spotify-clone-client/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Axios from 'axios';\nimport Sidebar from './components/sidebar-components/Sidebar.js';\nimport Logo from './components/sidebar-components/Logo.js';\nimport NavList from './components/sidebar-components/NavList.js';\nimport NavItem from './components/sidebar-components/NavItem.js';\nimport PlayLists from './components/sidebar-components/PlayLists.js';\nimport FeaturedPlaylist from './components/sidebar-components/FeaturedPlaylist.js';\nimport FeaturedItem from './components/sidebar-components/FeaturedItem.js';\nimport OtherPlaylist from './components/sidebar-components/OtherPlaylist.js';\nimport InstallCTA from './components/sidebar-components/InstallCTA.js';\nimport Footer from './components/footer-components/Footer.js';\nimport CTAbanner from './components/footer-components/CTAbanner';\nimport Player from './components/footer-components/Player';\nimport Featured from './components/featured-components/Featured.js';\nimport Loading from './components/featured-components/Loading.js';\nimport getHashParams from './utilities/getHashParams';\nimport reqWithToken from './utilities/reqWithToken';\nimport { UserContext, LoginContext, TokenContext, MessageContext, PlayContext } from './utilities/context';\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [loggedIn, setloggedIn] = useState(false);\n  const [token, setToken] = useState(null);\n  const [userInfo, setuserInfo] = useState({});\n  const [playlists, setPlaylists] = useState([]);\n  const [status, setStatus] = useState(false);\n  const [message, setMessage] = useState('');\n  const timerRef = useRef(null);\n  useEffect(() => {\n    var params = getHashParams();\n    const {\n      access_token,\n      error\n    } = params;\n    var cancelSource = Axios.CancelToken.source();\n\n    if (error) {\n      setLoading(false);\n      setStatusMessage(`ERROR: ${error}`);\n    } else {\n      if (access_token) {\n        setToken(access_token);\n        setloggedIn(true);\n        window.location.hash = '';\n\n        const makeRequests = async () => {\n          const requestUserInfo = reqWithToken('https://api.spotify.com/v1/me', access_token, cancelSource);\n          const requestPlayList = reqWithToken(`https://api.spotify.com/v1/me/playlists`, access_token, cancelSource);\n\n          try {\n            const [_userInfo, _playlists] = await Promise.all([requestUserInfo(), requestPlayList()]);\n            setuserInfo(_userInfo.data);\n            setPlaylists(_playlists.data.items);\n          } catch (error) {\n            setStatusMessage(`LOGIN ERROR: ${error}`);\n          }\n        };\n\n        makeRequests();\n        setLoading(false); //If nothing is found on in the hash params -> check with the server if there is a valid refresh token in the cookie\n      } else {\n        Axios(`${process.env.REACT_APP_BACK_URI}/refresh_token`, {\n          withCredentials: true\n        }).then(response => {\n          const access_token = response.data.access_token;\n          setToken(access_token);\n          setloggedIn(true);\n\n          const makeRequests = async () => {\n            const requestUserInfo = reqWithToken('https://api.spotify.com/v1/me', access_token, cancelSource);\n            const requestPlayList = reqWithToken(`https://api.spotify.com/v1/me/playlists`, access_token, cancelSource);\n\n            try {\n              const [_userInfo, _playlists] = await Promise.all([requestUserInfo(), requestPlayList()]);\n              setuserInfo(_userInfo.data);\n              setPlaylists(_playlists.data.items);\n            } catch (error) {\n              console.log(error);\n            }\n          };\n\n          makeRequests();\n          setLoading(false);\n        }).catch(error => {\n          console.log(error);\n          setLoading(false);\n          return;\n        });\n      }\n    }\n\n    return () => {\n      cancelSource.cancel();\n      clearTimeout(timerRef.current);\n    };\n  }, []);\n\n  const refreshPlaylist = () => {\n    const source = Axios.CancelToken.source();\n    const requestPlayList = reqWithToken(`https://api.spotify.com/v1/me/playlists`, token, source);\n    requestPlayList().then(response => setPlaylists(response.data.items)).catch(error => console.log(error));\n  };\n\n  const setStatusMessage = message => {\n    clearTimeout(timerRef.current);\n    setStatus(true);\n    setMessage(message);\n    timerRef.current = setTimeout(() => {\n      setStatus(false);\n    }, 3000);\n  };\n\n  const playerRef = useRef(null);\n\n  const updatePlayer = () => {\n    playerRef.current.updateState();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, loading ? /*#__PURE__*/React.createElement(Loading, {\n    type: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(MessageContext.Provider, {\n    value: setStatusMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoginContext.Provider, {\n    value: loggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(NavList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NavItem, {\n    to: \"/\",\n    exact: true,\n    name: \"Home\",\n    label: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(NavItem, {\n    to: \"/search\",\n    exact: true,\n    name: \"Search\",\n    label: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(NavItem, {\n    to: \"/collection\",\n    exact: false,\n    name: \"Library\",\n    label: \"Your Library\",\n    data_tip: \"library\",\n    data_for: \"tooltip\",\n    data_event: \"click\",\n    style: {\n      pointerEvents: loggedIn ? 'auto' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(PlayLists, {\n    top: /*#__PURE__*/React.createElement(FeaturedPlaylist, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(FeaturedItem, {\n      label: \"Liked Songs\",\n      loggedIn: loggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 27\n      }\n    })),\n    bottom: /*#__PURE__*/React.createElement(OtherPlaylist, {\n      playlists: playlists,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }), loggedIn ? /*#__PURE__*/React.createElement(InstallCTA, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 28\n    }\n  }) : null), /*#__PURE__*/React.createElement(PlayContext.Provider, {\n    value: updatePlayer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TokenContext.Provider, {\n    value: token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: userInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Featured, {\n    loggedIn: loggedIn,\n    playlists: playlists,\n    refreshPlaylist: () => refreshPlaylist(),\n    message: message,\n    status: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 23\n    }\n  })))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, loggedIn ? /*#__PURE__*/React.createElement(Player, {\n    token: token,\n    ref: playerRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(CTAbanner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 69\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/thinesh/project/spotify-clone-client/src/App.js"],"names":["React","useState","useEffect","useRef","Axios","Sidebar","Logo","NavList","NavItem","PlayLists","FeaturedPlaylist","FeaturedItem","OtherPlaylist","InstallCTA","Footer","CTAbanner","Player","Featured","Loading","getHashParams","reqWithToken","UserContext","LoginContext","TokenContext","MessageContext","PlayContext","App","loading","setLoading","loggedIn","setloggedIn","token","setToken","userInfo","setuserInfo","playlists","setPlaylists","status","setStatus","message","setMessage","timerRef","params","access_token","error","cancelSource","CancelToken","source","setStatusMessage","window","location","hash","makeRequests","requestUserInfo","requestPlayList","_userInfo","_playlists","Promise","all","data","items","process","env","REACT_APP_BACK_URI","withCredentials","then","response","console","log","catch","cancel","clearTimeout","current","refreshPlaylist","setTimeout","playerRef","updatePlayer","updateState","pointerEvents"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport Axios from 'axios';\n\nimport Sidebar from './components/sidebar-components/Sidebar.js'\nimport Logo from './components/sidebar-components/Logo.js'\nimport NavList from './components/sidebar-components/NavList.js'\nimport NavItem from './components/sidebar-components/NavItem.js'\nimport PlayLists from './components/sidebar-components/PlayLists.js'\nimport FeaturedPlaylist from './components/sidebar-components/FeaturedPlaylist.js'\nimport FeaturedItem from './components/sidebar-components/FeaturedItem.js'\nimport OtherPlaylist from './components/sidebar-components/OtherPlaylist.js'\nimport InstallCTA from './components/sidebar-components/InstallCTA.js'\nimport Footer from './components/footer-components/Footer.js'\nimport CTAbanner from './components/footer-components/CTAbanner'\nimport Player from './components/footer-components/Player'\nimport Featured from './components/featured-components/Featured.js'\nimport Loading from './components/featured-components/Loading.js'\n\n\nimport getHashParams from './utilities/getHashParams'\nimport reqWithToken from './utilities/reqWithToken'\nimport {UserContext, LoginContext, TokenContext, MessageContext, PlayContext} from './utilities/context'\n\nfunction App() {\n  const [loading, setLoading] = useState(true)\n  const [loggedIn, setloggedIn] = useState(false)\n  const [token, setToken] = useState(null)\n  const [userInfo, setuserInfo] = useState({})\n  const [playlists, setPlaylists] = useState([])\n\n  const [status, setStatus] = useState(false) \n  const [message, setMessage] = useState('')\n\n  const timerRef = useRef(null)\n\n  useEffect(() => {\n    var params = getHashParams();\n    const {access_token, error} = params\n\n    var cancelSource = Axios.CancelToken.source()\n    if (error){\n      setLoading(false)\n      setStatusMessage(`ERROR: ${error}`)\n    }else{\n      if (access_token) {\n        setToken(access_token)\n        setloggedIn(true)\n        window.location.hash = ''\n\n        const makeRequests = async() => {\n          const requestUserInfo = reqWithToken('https://api.spotify.com/v1/me', access_token, cancelSource) \n          const requestPlayList = reqWithToken(`https://api.spotify.com/v1/me/playlists`, access_token, cancelSource)\n\n          try{\n            const [_userInfo, _playlists] = await Promise.all([requestUserInfo(), requestPlayList()])\n            setuserInfo(_userInfo.data)\n            setPlaylists(_playlists.data.items)\n          }catch(error){\n            setStatusMessage(`LOGIN ERROR: ${error}`)\n          }\n        }\n        \n        makeRequests()\n\n        setLoading(false)\n      //If nothing is found on in the hash params -> check with the server if there is a valid refresh token in the cookie\n      }else{\n        Axios(`${process.env.REACT_APP_BACK_URI}/refresh_token`, {withCredentials: true})\n          .then((response) => {\n            const access_token = response.data.access_token\n            setToken(access_token)\n            setloggedIn(true)\n            \n            const makeRequests = async() => {\n              const requestUserInfo = reqWithToken('https://api.spotify.com/v1/me', access_token, cancelSource) \n              const requestPlayList = reqWithToken(`https://api.spotify.com/v1/me/playlists`, access_token, cancelSource)\n    \n              try{\n                const [_userInfo, _playlists] = await Promise.all([requestUserInfo(), requestPlayList()])\n                setuserInfo(_userInfo.data)\n                setPlaylists(_playlists.data.items)\n\n              }catch(error){\n                console.log(error)\n              }\n            }\n            \n            makeRequests()\n            setLoading(false)\n          })\n          .catch((error) => {\n            console.log(error)\n            setLoading(false)\n            return\n          })\n      }\n    }\n    return (()=> {\n      cancelSource.cancel()\n      clearTimeout(timerRef.current)\n    })\n  }, [])\n\n  const refreshPlaylist= () =>{\n    const source = Axios.CancelToken.source()\n    const requestPlayList = reqWithToken(`https://api.spotify.com/v1/me/playlists`, token, source)\n    requestPlayList()\n      .then(response => setPlaylists(response.data.items))\n      .catch(error => console.log(error))\n  }\n\n  const setStatusMessage = (message) => {\n      clearTimeout(timerRef.current)\n      setStatus(true)\n      setMessage(message)\n      timerRef.current = setTimeout(() => {\n          setStatus(false)\n      }, 3000)\n  }\n\n\n  const playerRef = useRef(null)\n  const updatePlayer = () => {\n    playerRef.current.updateState()\n  }\n\n  return (\n    <div className=\"App\">\n      {loading? \n        <Loading type='app'/> :\n        <MessageContext.Provider value={setStatusMessage}>\n          <LoginContext.Provider\n            value={loggedIn}>\n              \n              <Sidebar>\n                <Logo />\n                <NavList>\n                  <NavItem to='/' exact={true} name='Home' label='Home' />\n                  <NavItem to='/search' exact={true} name='Search' label='Search' />\n                  <NavItem to='/collection' exact={false} name='Library' label='Your Library' data_tip='library' data_for='tooltip' data_event='click' style={{ pointerEvents: loggedIn? 'auto':'none'}}/>\n                </NavList>\n                <PlayLists \n                  top={<FeaturedPlaylist>\n                          <FeaturedItem label='Liked Songs' loggedIn={loggedIn} />\n                        </FeaturedPlaylist>}\n                  bottom={<OtherPlaylist playlists={playlists}/>}\n                />\n                {loggedIn? <InstallCTA /> : null}\n              </Sidebar>\n              \n              <PlayContext.Provider value={updatePlayer}>\n                <TokenContext.Provider value={token}>\n                    <UserContext.Provider value={userInfo}>\n                      <Featured loggedIn={loggedIn} playlists={playlists} refreshPlaylist={() => refreshPlaylist()} message={message} status={status} />\n                    </UserContext.Provider>\n                </TokenContext.Provider>\n              </PlayContext.Provider>\n\n              <Footer>\n                {loggedIn? <Player token={token} ref={playerRef}/>: <CTAbanner/>}\n              </Footer>\n                  \n          </LoginContext.Provider>\n\n        </MessageContext.Provider>\n      }\n    </div>\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}