{"ast":null,"code":"import axios from 'axios';\n\nconst putWithToken = (endpoint, access_token, cancelSource, data, method = 'PUT') => {\n  const request = async () => {\n    const cancelToken = cancelSource.token;\n    const options = {\n      url: endpoint,\n      method,\n      headers: {\n        'Authorization': 'Bearer ' + access_token,\n        'Content-Type': 'application/json'\n      },\n      data,\n      cancelToken\n    };\n    let result;\n\n    try {\n      result = await axios(options);\n    } catch (err) {\n      if (axios.isCancel(err)) return;\n      return err;\n    }\n\n    return result;\n  };\n\n  return request;\n};\n\nexport default putWithToken;","map":{"version":3,"sources":["/home/thinesh/project/spotify-clone-client/src/utilities/putWithToken.js"],"names":["axios","putWithToken","endpoint","access_token","cancelSource","data","method","request","cancelToken","token","options","url","headers","result","err","isCancel"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,YAAX,EAAyBC,YAAzB,EAAuCC,IAAvC,EAA6CC,MAAM,GAAC,KAApD,KAA6D;AAC9E,QAAMC,OAAO,GAAG,YAAY;AACxB,UAAMC,WAAW,GAAGJ,YAAY,CAACK,KAAjC;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,GAAG,EAAET,QADO;AAEZI,MAAAA,MAFY;AAGZM,MAAAA,OAAO,EAAE;AACL,yBAAiB,YAAYT,YADxB;AAEL,wBAAgB;AAFX,OAHG;AAMZE,MAAAA,IANY;AAOZG,MAAAA;AAPY,KAAhB;AAUA,QAAIK,MAAJ;;AACA,QAAG;AACCA,MAAAA,MAAM,GAAG,MAAMb,KAAK,CAACU,OAAD,CAApB;AACH,KAFD,CAEC,OAAOI,GAAP,EAAW;AACR,UAAId,KAAK,CAACe,QAAN,CAAeD,GAAf,CAAJ,EAAyB;AACzB,aAAOA,GAAP;AACH;;AACD,WAAOD,MAAP;AACH,GApBD;;AAsBA,SAAON,OAAP;AACH,CAxBD;;AA0BA,eAAeN,YAAf","sourcesContent":["import axios from 'axios'\n\nconst putWithToken = (endpoint, access_token, cancelSource, data, method='PUT') =>{\n    const request = async () => {\n        const cancelToken = cancelSource.token\n        const options = {\n            url: endpoint,\n            method,\n            headers: { \n                'Authorization': 'Bearer ' + access_token,\n                'Content-Type': 'application/json' },\n            data,\n            cancelToken\n        };\n\n        let result\n        try{\n            result = await axios(options)\n        }catch (err){\n            if (axios.isCancel(err)) return\n            return err\n        }\n        return result \n    }\n    \n    return request\n}\n\nexport default putWithToken"]},"metadata":{},"sourceType":"module"}