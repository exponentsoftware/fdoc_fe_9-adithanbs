{"ast":null,"code":"var _jsxFileName = \"/home/thinesh/project/spotify-clone-client/src/components/pages-components/BrowsePage.js\";\nimport React, { useState, useEffect } from 'react';\nimport makeAxiosRequest from '../../utilities/makeAxiosRequest';\nimport BrowseCard from '../featured-components/BrowseCard';\nimport PageTitle from '../featured-components/PageTitle';\nexport default function BrowsePage() {\n  const [genre, setGenre] = useState([]);\n  useEffect(() => {\n    const [source, makeRequest] = makeAxiosRequest('https://api.spotify.com/v1/browse/categories?limit=50');\n    makeRequest().then(data => {\n      setGenre(data.categories.items);\n    }).catch(error => console.log(error));\n    return () => source.cancel();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"browsePage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    name: \"Browse All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"browseGrid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, genre.map(genre => {\n    return /*#__PURE__*/React.createElement(BrowseCard, {\n      key: genre.id,\n      info: genre,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 32\n      }\n    });\n  }))));\n}","map":{"version":3,"sources":["/home/thinesh/project/spotify-clone-client/src/components/pages-components/BrowsePage.js"],"names":["React","useState","useEffect","makeAxiosRequest","BrowseCard","PageTitle","BrowsePage","genre","setGenre","source","makeRequest","then","data","categories","items","catch","error","console","log","cancel","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AAEA,eAAe,SAASC,UAAT,GAAsB;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM,CAACO,MAAD,EAASC,WAAT,IAAwBP,gBAAgB,CAAC,uDAAD,CAA9C;AAEAO,IAAAA,WAAW,GACNC,IADL,CACWC,IAAD,IAAU;AACZJ,MAAAA,QAAQ,CAACI,IAAI,CAACC,UAAL,CAAgBC,KAAjB,CAAR;AACH,KAHL,EAIKC,KAJL,CAIYC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJtB;AAMA,WAAO,MAAMP,MAAM,CAACU,MAAP,EAAb;AACH,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKZ,KAAK,CAACa,GAAN,CAAWb,KAAD,IAAW;AAClB,wBAAO,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,KAAK,CAACc,EAAvB;AAA2B,MAAA,IAAI,EAAEd,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFA,CADL,CAFJ,CADJ,CADJ;AAYH","sourcesContent":["import React, {useState, useEffect} from 'react'\n\nimport makeAxiosRequest from '../../utilities/makeAxiosRequest'\n\nimport BrowseCard from '../featured-components/BrowseCard'\nimport PageTitle from '../featured-components/PageTitle'\n\nexport default function BrowsePage() {\n    const [genre, setGenre] = useState([])\n\n    useEffect(() => {\n        const [source, makeRequest] = makeAxiosRequest('https://api.spotify.com/v1/browse/categories?limit=50')\n\n        makeRequest()\n            .then((data) => {\n                setGenre(data.categories.items)\n            })\n            .catch((error) => console.log(error))\n        \n        return () => source.cancel()\n    }, [])\n\n    return (\n        <div className=\"page-content\">\n            <div className='browsePage'>\n                <PageTitle name='Browse All' />\n                <div className=\"browseGrid\">\n                    {genre.map((genre) => {\n                        return <BrowseCard key={genre.id} info={genre}/>\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}