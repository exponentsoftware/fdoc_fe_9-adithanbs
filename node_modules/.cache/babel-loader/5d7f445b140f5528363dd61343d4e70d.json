{"ast":null,"code":"var _jsxFileName = \"/home/thinesh/project/spotify-clone-client/src/components/footer-components/ConnectDevices.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ConnectDevicesItem from \"./ConnectDevicesItem\";\nimport reqWithToken from \"../../utilities/reqWithToken\";\nimport putWithToken from \"../../utilities/putWithToken\";\n\nconst ConnectDevices = ({\n  token,\n  closeTip\n}) => {\n  const [devices, setDevices] = useState([]);\n  const source = axios.CancelToken.source();\n  useEffect(() => {\n    const requestDevices = reqWithToken(\"https://api.spotify.com/v1/me/player/devices\", token, source);\n    window.addEventListener(\"click\", clickExit);\n    requestDevices().then(response => {\n      const _devices = response.data.devices;\n      setDevices(_devices);\n    }).catch(error => console.log(error));\n    return () => {\n      window.removeEventListener(\"click\", clickExit);\n      source.cancel();\n    }; // eslint-disable-next-line\n  }, []);\n\n  const clickExit = e => {\n    if (e.target.dataset.source !== \"inside\") {\n      closeTip();\n    }\n  };\n\n  const switchDevice = e => {\n    const id = e.currentTarget.dataset.id;\n    const data = {\n      device_ids: [id]\n    };\n    const reqTransfer = putWithToken(\"https://api.spotify.com/v1/me/player\", token, source, data);\n    reqTransfer().then(response => {\n      if (response.status === 204) {\n        closeTip();\n      }\n    }).catch(error => console.log(error));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"connect-devices\",\n    \"data-source\": \"inside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"connect-devices-content\",\n    \"data-source\": \"inside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"connect-devices-title\",\n    \"data-source\": \"inside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-source\": \"inside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }\n  }, \"Connect to a device\"), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-source\": \"inside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, \"Below are the connected devices that you have on your network, use Spotify Clone Player to listen here (try closing and opening this popup if you don't see it)\"), /*#__PURE__*/React.createElement(\"br\", {\n    \"data-source\": \"inside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    \"data-source\": \"inside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, \"This app also works as a remote controller - log in to an official Spotify app on the same network to checkout this feature\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cd-img\",\n    \"data-source\": \"inside\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    loading: \"lazy\",\n    \"data-source\": \"inside\",\n    src: \"https://open.scdn.co/cdn/images/connect_header@1x.ecc6912d.png\",\n    alt: \"\",\n    draggable: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  })), devices.length === 0 ? /*#__PURE__*/React.createElement(ConnectDevicesItem, {\n    name: \"No devices available\",\n    disable: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 6\n    }\n  }) : devices.map((device, index) => {\n    return /*#__PURE__*/React.createElement(ConnectDevicesItem, {\n      name: device.name,\n      key: index,\n      active: device.is_active,\n      id: device.id,\n      onClick: switchDevice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 8\n      }\n    });\n  })));\n};\n\nexport default ConnectDevices;","map":{"version":3,"sources":["/home/thinesh/project/spotify-clone-client/src/components/footer-components/ConnectDevices.js"],"names":["React","useState","useEffect","axios","ConnectDevicesItem","reqWithToken","putWithToken","ConnectDevices","token","closeTip","devices","setDevices","source","CancelToken","requestDevices","window","addEventListener","clickExit","then","response","_devices","data","catch","error","console","log","removeEventListener","cancel","e","target","dataset","switchDevice","id","currentTarget","device_ids","reqTransfer","status","length","map","device","index","name","is_active"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport ConnectDevicesItem from \"./ConnectDevicesItem\";\n\nimport reqWithToken from \"../../utilities/reqWithToken\";\nimport putWithToken from \"../../utilities/putWithToken\";\n\nconst ConnectDevices = ({ token, closeTip }) => {\n\tconst [devices, setDevices] = useState([]);\n\n\tconst source = axios.CancelToken.source();\n\tuseEffect(() => {\n\t\tconst requestDevices = reqWithToken(\n\t\t\t\"https://api.spotify.com/v1/me/player/devices\",\n\t\t\ttoken,\n\t\t\tsource\n\t\t);\n\n\t\twindow.addEventListener(\"click\", clickExit);\n\t\trequestDevices()\n\t\t\t.then((response) => {\n\t\t\t\tconst _devices = response.data.devices;\n\t\t\t\tsetDevices(_devices);\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"click\", clickExit);\n\t\t\tsource.cancel();\n\t\t};\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\tconst clickExit = (e) => {\n\t\tif (e.target.dataset.source !== \"inside\") {\n\t\t\tcloseTip();\n\t\t}\n\t};\n\n\tconst switchDevice = (e) => {\n\t\tconst id = e.currentTarget.dataset.id;\n\t\tconst data = { device_ids: [id] };\n\t\tconst reqTransfer = putWithToken(\n\t\t\t\"https://api.spotify.com/v1/me/player\",\n\t\t\ttoken,\n\t\t\tsource,\n\t\t\tdata\n\t\t);\n\t\treqTransfer()\n\t\t\t.then((response) => {\n\t\t\t\tif (response.status === 204) {\n\t\t\t\t\tcloseTip();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t};\n\n\treturn (\n\t\t<div className=\"connect-devices\" data-source=\"inside\">\n\t\t\t<div className=\"connect-devices-content\" data-source=\"inside\">\n\t\t\t\t<div className=\"connect-devices-title\" data-source=\"inside\">\n\t\t\t\t\t<h1 data-source=\"inside\">Connect to a device</h1>\n\t\t\t\t\t<p data-source=\"inside\">\n\t\t\t\t\t\tBelow are the connected devices that you have on your network, use\n\t\t\t\t\t\tSpotify Clone Player to listen here (try closing and opening this\n\t\t\t\t\t\tpopup if you don't see it)\n\t\t\t\t\t</p>\n\t\t\t\t\t<br data-source=\"inside\"></br>\n\t\t\t\t\t<p data-source=\"inside\">\n\t\t\t\t\t\tThis app also works as a remote controller - log in to an official\n\t\t\t\t\t\tSpotify app on the same network to checkout this feature\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"cd-img\" data-source=\"inside\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tloading=\"lazy\"\n\t\t\t\t\t\tdata-source=\"inside\"\n\t\t\t\t\t\tsrc=\"https://open.scdn.co/cdn/images/connect_header@1x.ecc6912d.png\"\n\t\t\t\t\t\talt=\"\"\n\t\t\t\t\t\tdraggable=\"false\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t{devices.length === 0 ? (\n\t\t\t\t\t<ConnectDevicesItem name=\"No devices available\" disable />\n\t\t\t\t) : (\n\t\t\t\t\tdevices.map((device, index) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ConnectDevicesItem\n\t\t\t\t\t\t\t\tname={device.name}\n\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\tactive={device.is_active}\n\t\t\t\t\t\t\t\tid={device.id}\n\t\t\t\t\t\t\t\tonClick={switchDevice}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ConnectDevices;\n"]},"metadata":{},"sourceType":"module"}